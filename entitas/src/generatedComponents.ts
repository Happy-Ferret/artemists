/**
 * Generated by artemis 0.0.5
 * do not edit this file
 */
module artemis {
  export module components {

    import World = artemis.World;
    import Entity = artemis.Entity;
    import Aspect = artemis.Aspect;
    import EntitySystem = artemis.EntitySystem;
    import PooledComponent = artemis.PooledComponent;
    import Pooled = artemis.annotations.Pooled;

    export enum CoreComponentIds {
      Player,
      Enemy,
      Bullet,
      Particle,
      Bounds,
      Destroy,
      Expires,
      Firing,
      Health,
      Input,
      Interactive,
      Layer,
      Mouse,
      Movable,
      Move,
      Position,
      Resource,
      Scale,
      ScaleAnimation,
      Score,
      SoundEffect,
      Tint,
      Velocity,
      View,
      AddView,
      TotalComponents
    }


    @Pooled()
    export class PlayerComponent extends PooledComponent {
      public static className = 'PlayerComponent';
      public initialize() {
      }
    }
    @Pooled()
    export class EnemyComponent extends PooledComponent {
      public static className = 'EnemyComponent';
      public initialize() {
      }
    }
    @Pooled()
    export class BulletComponent extends PooledComponent {
      public static className = 'BulletComponent';
      public initialize() {
      }
    }
    @Pooled()
    export class ParticleComponent extends PooledComponent {
      public static className = 'ParticleComponent';
      public initialize() {
      }
    }
    @Pooled()
    export class BoundsComponent extends PooledComponent {
      public static className = 'BoundsComponent';
      public initialize(radius) {
        this.radius = radius;
      }
      public radius:number;
    }
    BoundsComponent.prototype.radius = 0;
    @Pooled()
    export class DestroyComponent extends PooledComponent {
      public static className = 'DestroyComponent';
      public initialize() {
      }
    }
    @Pooled()
    export class ExpiresComponent extends PooledComponent {
      public static className = 'ExpiresComponent';
      public initialize(delay) {
        this.delay = delay;
      }
      public delay:number;
    }
    ExpiresComponent.prototype.delay = 0;
    @Pooled()
    export class FiringComponent extends PooledComponent {
      public static className = 'FiringComponent';
      public initialize() {
      }
    }
    @Pooled()
    export class HealthComponent extends PooledComponent {
      public static className = 'HealthComponent';
      public initialize(health, maximumHealth) {
        this.health = health;
        this.maximumHealth = maximumHealth;
      }
      public health:number;
      public maximumHealth:number;
    }
    HealthComponent.prototype.health = 0;
    HealthComponent.prototype.maximumHealth = 0;
    @Pooled()
    export class InputComponent extends PooledComponent {
      public static className = 'InputComponent';
      public initialize(x, y) {
        this.x = x;
        this.y = y;
      }
      public x:number;
      public y:number;
    }
    InputComponent.prototype.x = 0;
    InputComponent.prototype.y = 0;
    @Pooled()
    export class InteractiveComponent extends PooledComponent {
      public static className = 'InteractiveComponent';
      public initialize() {
      }
    }
    @Pooled()
    export class LayerComponent extends PooledComponent {
      public static className = 'LayerComponent';
      public initialize(ordinal) {
        this.ordinal = ordinal;
      }
      public ordinal:number;
    }
    LayerComponent.prototype.ordinal = 0;
    @Pooled()
    export class MouseComponent extends PooledComponent {
      public static className = 'MouseComponent';
      public initialize(x, y) {
        this.x = x;
        this.y = y;
      }
      public x:number;
      public y:number;
    }
    MouseComponent.prototype.x = 0;
    MouseComponent.prototype.y = 0;
    @Pooled()
    export class MovableComponent extends PooledComponent {
      public static className = 'MovableComponent';
      public initialize() {
      }
    }
    @Pooled()
    export class MoveComponent extends PooledComponent {
      public static className = 'MoveComponent';
      public initialize(speed, maxSpeed) {
        this.speed = speed;
        this.maxSpeed = maxSpeed;
      }
      public speed:number;
      public maxSpeed:number;
    }
    MoveComponent.prototype.speed = 0;
    MoveComponent.prototype.maxSpeed = 0;
    @Pooled()
    export class PositionComponent extends PooledComponent {
      public static className = 'PositionComponent';
      public initialize(x, y) {
        this.x = x;
        this.y = y;
      }
      public x:number;
      public y:number;
    }
    PositionComponent.prototype.x = 0;
    PositionComponent.prototype.y = 0;
    @Pooled()
    export class ResourceComponent extends PooledComponent {
      public static className = 'ResourceComponent';
      public initialize(name) {
        this.name = name;
      }
      public name:string;
    }
    ResourceComponent.prototype.name = "";
    @Pooled()
    export class ScaleComponent extends PooledComponent {
      public static className = 'ScaleComponent';
      public initialize(x, y) {
        this.x = x;
        this.y = y;
      }
      public x:number;
      public y:number;
    }
    ScaleComponent.prototype.x = 0;
    ScaleComponent.prototype.y = 0;
    @Pooled()
    export class ScaleAnimationComponent extends PooledComponent {
      public static className = 'ScaleAnimationComponent';
      public initialize(min, max, speed, repeat, active) {
        this.min = min;
        this.max = max;
        this.speed = speed;
        this.repeat = repeat;
        this.active = active;
      }
      public min:number;
      public max:number;
      public speed:number;
      public repeat:boolean;
      public active:boolean;
    }
    ScaleAnimationComponent.prototype.min = 0;
    ScaleAnimationComponent.prototype.max = 0;
    ScaleAnimationComponent.prototype.speed = 0;
    ScaleAnimationComponent.prototype.repeat = null;
    ScaleAnimationComponent.prototype.active = null;
    @Pooled()
    export class ScoreComponent extends PooledComponent {
      public static className = 'ScoreComponent';
      public initialize(value) {
        this.value = value;
      }
      public value:number;
    }
    ScoreComponent.prototype.value = 0;
    @Pooled()
    export class SoundEffectComponent extends PooledComponent {
      public static className = 'SoundEffectComponent';
      public initialize(effect) {
        this.effect = effect;
      }
      public effect:number;
    }
    SoundEffectComponent.prototype.effect = 0;
    @Pooled()
    export class TintComponent extends PooledComponent {
      public static className = 'TintComponent';
      public initialize(rgb) {
        this.rgb = rgb;
      }
      public rgb:number;
    }
    TintComponent.prototype.rgb = 0;
    @Pooled()
    export class VelocityComponent extends PooledComponent {
      public static className = 'VelocityComponent';
      public initialize(x, y) {
        this.x = x;
        this.y = y;
      }
      public x:number;
      public y:number;
    }
    VelocityComponent.prototype.x = 0;
    VelocityComponent.prototype.y = 0;
    @Pooled()
    export class ViewComponent extends PooledComponent {
      public static className = 'ViewComponent';
      public initialize(sprite) {
        this.sprite = sprite;
      }
      public sprite:Object;
    }
    ViewComponent.prototype.sprite = null;
    @Pooled()
    export class AddViewComponent extends PooledComponent {
      public static className = 'AddViewComponent';
      public initialize() {
      }
    }


  }
  //artemis.browser.VisualDebugging.init();
}