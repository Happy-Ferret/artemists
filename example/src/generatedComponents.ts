/**
 * Generated by artemis 0.0.5
 * do not edit this file
 */
module artemis {
  export module components {

    import World = artemis.World;
    import Entity = artemis.Entity;
    import Aspect = artemis.Aspect;
    import EntitySystem = artemis.EntitySystem;
    import PooledComponent = artemis.PooledComponent;
    import Pooled = artemis.annotations.Pooled;

    export enum CoreComponentIds {
      Bounds,
      ColorAnimation,
      Enemy,
      Expires,
      Health,
      ParallaxStar,
      Player,
      Position,
      ScaleAnimation,
      SoundEffect,
      Sprite,
      Velocity,
      Score,
      TotalComponents
    }


    @Pooled()
    export class BoundsComponent extends PooledComponent {
      public static className = 'BoundsComponent';
      public initialize(radius) {
        this.radius = radius;
      }
      public radius:number;
    }
    BoundsComponent.prototype.radius = 0;
    @Pooled()
    export class ColorAnimationComponent extends PooledComponent {
      public static className = 'ColorAnimationComponent';
      public initialize(redMin, redMax, redSpeed, greenMin, greenMax, greenSpeed, blueMin, blueMax, blueSpeed, alphaMin, alphaMax, alphaSpeed, redAnimate, greenAnimate, blueAnimate, alphaAnimate, repeat) {
        this.redMin = redMin;
        this.redMax = redMax;
        this.redSpeed = redSpeed;
        this.greenMin = greenMin;
        this.greenMax = greenMax;
        this.greenSpeed = greenSpeed;
        this.blueMin = blueMin;
        this.blueMax = blueMax;
        this.blueSpeed = blueSpeed;
        this.alphaMin = alphaMin;
        this.alphaMax = alphaMax;
        this.alphaSpeed = alphaSpeed;
        this.redAnimate = redAnimate;
        this.greenAnimate = greenAnimate;
        this.blueAnimate = blueAnimate;
        this.alphaAnimate = alphaAnimate;
        this.repeat = repeat;
      }
      public redMin:number;
      public redMax:number;
      public redSpeed:number;
      public greenMin:number;
      public greenMax:number;
      public greenSpeed:number;
      public blueMin:number;
      public blueMax:number;
      public blueSpeed:number;
      public alphaMin:number;
      public alphaMax:number;
      public alphaSpeed:number;
      public redAnimate:boolean;
      public greenAnimate:boolean;
      public blueAnimate:boolean;
      public alphaAnimate:boolean;
      public repeat:boolean;
    }
    ColorAnimationComponent.prototype.redMin = 0;
    ColorAnimationComponent.prototype.redMax = 0;
    ColorAnimationComponent.prototype.redSpeed = 0;
    ColorAnimationComponent.prototype.greenMin = 0;
    ColorAnimationComponent.prototype.greenMax = 0;
    ColorAnimationComponent.prototype.greenSpeed = 0;
    ColorAnimationComponent.prototype.blueMin = 0;
    ColorAnimationComponent.prototype.blueMax = 0;
    ColorAnimationComponent.prototype.blueSpeed = 0;
    ColorAnimationComponent.prototype.alphaMin = 0;
    ColorAnimationComponent.prototype.alphaMax = 0;
    ColorAnimationComponent.prototype.alphaSpeed = 0;
    ColorAnimationComponent.prototype.redAnimate = null;
    ColorAnimationComponent.prototype.greenAnimate = null;
    ColorAnimationComponent.prototype.blueAnimate = null;
    ColorAnimationComponent.prototype.alphaAnimate = null;
    ColorAnimationComponent.prototype.repeat = null;
    @Pooled()
    export class EnemyComponent extends PooledComponent {
      public static className = 'EnemyComponent';
      public initialize() {
      }
    }
    @Pooled()
    export class ExpiresComponent extends PooledComponent {
      public static className = 'ExpiresComponent';
      public initialize(delay) {
        this.delay = delay;
      }
      public delay:number;
    }
    ExpiresComponent.prototype.delay = 0;
    @Pooled()
    export class HealthComponent extends PooledComponent {
      public static className = 'HealthComponent';
      public initialize(health, maximumHealth) {
        this.health = health;
        this.maximumHealth = maximumHealth;
      }
      public health:number;
      public maximumHealth:number;
    }
    HealthComponent.prototype.health = 0;
    HealthComponent.prototype.maximumHealth = 0;
    @Pooled()
    export class ParallaxStarComponent extends PooledComponent {
      public static className = 'ParallaxStarComponent';
      public initialize() {
      }
    }
    @Pooled()
    export class PlayerComponent extends PooledComponent {
      public static className = 'PlayerComponent';
      public initialize() {
      }
    }
    @Pooled()
    export class PositionComponent extends PooledComponent {
      public static className = 'PositionComponent';
      public initialize(x, y) {
        this.x = x;
        this.y = y;
      }
      public x:number;
      public y:number;
    }
    PositionComponent.prototype.x = 0;
    PositionComponent.prototype.y = 0;
    @Pooled()
    export class ScaleAnimationComponent extends PooledComponent {
      public static className = 'ScaleAnimationComponent';
      public initialize(min, max, speed, repeat, active) {
        this.min = min;
        this.max = max;
        this.speed = speed;
        this.repeat = repeat;
        this.active = active;
      }
      public min:number;
      public max:number;
      public speed:number;
      public repeat:boolean;
      public active:boolean;
    }
    ScaleAnimationComponent.prototype.min = 0;
    ScaleAnimationComponent.prototype.max = 0;
    ScaleAnimationComponent.prototype.speed = 0;
    ScaleAnimationComponent.prototype.repeat = null;
    ScaleAnimationComponent.prototype.active = null;
    @Pooled()
    export class SoundEffectComponent extends PooledComponent {
      public static className = 'SoundEffectComponent';
      public initialize(effect) {
        this.effect = effect;
      }
      public effect:number;
    }
    SoundEffectComponent.prototype.effect = 0;
    @Pooled()
    export class SpriteComponent extends PooledComponent {
      public static className = 'SpriteComponent';
      public initialize(layer, object) {
        this.layer = layer;
        this.object = object;
      }
      public layer:number;
      public object:Object;
    }
    SpriteComponent.prototype.layer = 0;
    SpriteComponent.prototype.object = null;
    @Pooled()
    export class VelocityComponent extends PooledComponent {
      public static className = 'VelocityComponent';
      public initialize(x, y) {
        this.x = x;
        this.y = y;
      }
      public x:number;
      public y:number;
    }
    VelocityComponent.prototype.x = 0;
    VelocityComponent.prototype.y = 0;
    @Pooled()
    export class ScoreComponent extends PooledComponent {
      public static className = 'ScoreComponent';
      public initialize(value) {
        this.value = value;
      }
      public value:number;
    }
    ScoreComponent.prototype.value = 0;


  }
  //artemis.browser.VisualDebugging.init();
}